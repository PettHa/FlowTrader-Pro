.visual-strategy-builder {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 70vh;
    min-height: 500px;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: var(--shadow-md);
    border: 1px solid var(--gray-200);
    background-color: white;
  }
  
  /* Builder controls */
  .builder-controls {
    display: flex;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background-color: var(--gray-50);
    border-bottom: 1px solid var(--gray-200);
    flex-wrap: wrap;
  }
  
  .control-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    border-radius: 0.375rem;
    font-weight: 500;
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    border: 1px solid transparent;
  }
  
  .control-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  .control-button.primary {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }
  .control-button.primary:hover:not(:disabled) {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
  }
  
  .control-button.secondary {
    background-color: white;
    color: var(--gray-700);
    border-color: var(--gray-300);
  }
  .control-button.secondary:hover:not(:disabled) {
    background-color: var(--gray-50);
    border-color: var(--gray-400);
  }
  
  .control-button.danger {
    color: var(--danger-color);
    background-color: white;
    border-color: var(--danger-color);
  }
  .control-button.danger:hover:not(:disabled) {
    background-color: var(--danger-color);
    color: white;
  }
  
  .control-button.warning {
    color: #f59e0b; /* amber-500 */
    background-color: white;
    border-color: #f59e0b;
  }
  .control-button.warning:hover:not(:disabled) {
    background-color: #f59e0b;
    color: white;
  }
  
  .control-spacer {
    flex: 1;
  }
  
  /* Builder content */
  .builder-content {
    flex: 1;
    position: relative;
  }
  
  /* Node menu */
  .node-menu {
    background-color: white;
    border-radius: 0.5rem;
    box-shadow: var(--shadow-lg);
    overflow: hidden;
    min-width: 180px;
    border: 1px solid var(--gray-200);
    animation: menu-appear 0.15s ease-out;
  }
  
  @keyframes menu-appear {
    from { opacity: 0; transform: scale(0.95); }
    to { opacity: 1; transform: scale(1); }
  }
  
  .node-menu-header {
    padding: 0.5rem 0.75rem;
    font-weight: 600;
    font-size: 0.875rem;
    background-color: var(--gray-50);
    border-bottom: 1px solid var(--gray-200);
  }
  
  .node-menu-category {
    padding: 0.25rem 0;
  }
  
  .node-menu-category:not(:last-child) {
    border-bottom: 1px solid var(--gray-100);
  }
  
  .category-title {
    padding: 0.25rem 0.75rem;
    font-size: 0.7rem;
    color: var(--gray-500);
    font-weight: 600;
    text-transform: uppercase;
  }
  
  .node-menu-item {
    display: block;
    width: 100%;
    text-align: left;
    padding: 0.4rem 0.75rem;
    font-size: 0.875rem;
    color: var(--gray-700);
    background: none;
    border: none;
    cursor: pointer;
    transition: background-color 0.15s ease;
  }
  
  .node-menu-item:hover {
    background-color: var(--gray-100);
    color: var(--gray-900);
  }
  
  /* Base Node Styles */
  .strategy-node {
    border-radius: 5px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    font-size: 0.8rem;
    color: var(--gray-800);
    width: 190px;
    background-color: white;
    border: 1px solid var(--gray-300);
    transition: all 0.2s ease;
    overflow: visible;
  }
  
  /* Node header */
  .node-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    border-bottom: 1px solid var(--gray-200);
    background-color: var(--gray-50);
    color: var(--gray-700);
    user-select: none;
  }
  
  .node-title {
    font-weight: 600;
    font-size: 0.8rem;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    flex-grow: 1;
    margin-right: 0.5rem;
  }
  
  .node-header-icon {
    margin-left: 4px;
    flex-shrink: 0;
    color: var(--gray-500);
  }
  
  .edit-toggle-icon {
    transition: transform 0.2s ease;
    color: var(--gray-500);
    flex-shrink: 0;
    margin-left: 4px;
  }
  
  .node-header:hover .edit-toggle-icon {
    color: var(--gray-700);
  }
  
  .strategy-node.expanded .edit-toggle-icon {
    transform: rotate(180deg);
  }
  
  /* Node parameter groups */
  .node-param-group {
    padding: 0.6rem 0.75rem;
    display: flex;
    flex-direction: column;
    gap: 0.35rem;
  }
  
  .node-param-group:not(:last-child) {
    border-bottom: 1px solid var(--gray-100);
  }
  
  .node-param-label {
    font-size: 0.7rem;
    font-weight: 500;
    color: var(--gray-600);
    text-transform: uppercase;
    letter-spacing: 0.02em;
  }
  
  .node-input, .node-select {
    font-size: 0.75rem;
    padding: 0.35rem 0.5rem;
    border: 1px solid var(--gray-300);
    border-radius: 3px;
    width: 100%;
    box-sizing: border-box;
  }
  
  .node-input:focus, .node-select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.25);
  }
  
  .node-select {
    background-color: white;
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.3rem center;
    background-repeat: no-repeat;
    background-size: 1.2em 1.2em;
    padding-right: 2rem;
  }
  
  /* Node summary for collapsed state */
  .node-summary {
    padding: 0.75rem;
    font-size: 0.8rem;
    color: var(--gray-700);
    text-align: center;
    background-color: var(--gray-25, #fcfcfc);
    border-bottom: 1px solid var(--gray-100);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  /* Node connections */
  .node-connections {
    display: flex;
    justify-content: space-between;
    padding: 0;
    margin-top: 0.25rem;
    position: relative;
    min-height: 30px;
    padding-bottom: 0.5rem;
    padding-left: 6px;
    padding-right: 6px;
  }
  
  .connection-inputs,
  .connection-outputs {
    display: flex;
    flex-direction: column;
    gap: 14px;
    padding: 0.5rem 0;
    width: 50%;
    position: relative;
    min-height: inherit;
  }
  
  .connection-inputs {
    align-items: flex-start;
  }
  
  .connection-outputs {
    align-items: flex-end;
  }
  
  /* Handle and label wrapper */
  .handle-label-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    height: 10px;
    width: 100%;
  }
  
  .connection-inputs .handle-label-wrapper {
    justify-content: flex-start;
  }
  
  .connection-outputs .handle-label-wrapper {
    justify-content: flex-end;
  }
  
  /* Handle label */
  .connection-label {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: 0.65rem;
    color: var(--gray-600);
    white-space: nowrap;
    line-height: 1;
    margin: 0;
    pointer-events: none;
    background: rgba(255, 255, 255, 0.7);
    padding: 1px 3px;
    border-radius: 2px;
  }
  
  .connection-inputs .connection-label {
    left: 14px;
  }
  
  .connection-outputs .connection-label {
    right: 14px;
  }
  
  /* Handle styles */
  .react-flow__handle {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: var(--gray-400);
    border: 1px solid white;
    transition: background-color 0.2s ease, transform 0.2s ease;
  }
  
  .react-flow__handle:hover {
    background-color: var(--gray-600);
    transform: scale(1.2);
  }
  
  .react-flow__handle-connecting {
    background-color: var(--primary-color) !important;
    transform: scale(1.3);
  }
  
  .react-flow__handle-valid {
    background-color: var(--success-color) !important;
    transform: scale(1.3);
  }
  
  .react-flow__handle-invalid {
    background-color: var(--danger-color) !important;
  }
  
  /* Selected node */
  .strategy-node.selected {
    border-color: var(--primary-color) !important;
    border-width: 2px;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3), var(--shadow-md);
  }
  
  /* Node type-specific styles */
  /* Price Node */
  .price-node .node-header { 
    background-color: rgba(37, 99, 235, 0.1); 
    border-color: rgba(37, 99, 235, 0.2); 
  }
  .price-node .react-flow__handle { 
    background-color: #2563eb; 
  }
  
  /* Indicator Node */
  .indicator-node .node-header { 
    background-color: rgba(219, 39, 119, 0.1); 
    border-color: rgba(219, 39, 119, 0.2); 
  }
  .indicator-node .react-flow__handle { 
    background-color: #db2777; 
  }
  
  /* Condition Node */
  .condition-node .node-header { 
    background-color: rgba(16, 185, 129, 0.1); 
    border-color: rgba(16, 185, 129, 0.2); 
  }
  .condition-node .react-flow__handle { 
    background-color: #10b981; 
  }
  
  /* Logic Node */
  .logic-node .node-header { 
    background-color: rgba(79, 70, 229, 0.1); 
    border-color: rgba(79, 70, 229, 0.2); 
  }
  .logic-node .react-flow__handle { 
    background-color: #4f46e5; 
  }
  
  /* Action Nodes (Entry/Exit) */
  .action-node.long .node-header { 
    background-color: rgba(16, 185, 129, 0.1); 
    border-color: rgba(16, 185, 129, 0.2); 
  }
  .action-node.long .react-flow__handle { 
    background-color: #10b981; 
  }
  .action-node.long .position-icon { 
    color: #059669; 
  }
  
  .action-node.short .node-header { 
    background-color: rgba(239, 68, 68, 0.1); 
    border-color: rgba(239, 68, 68, 0.2); 
  }
  .action-node.short .react-flow__handle { 
    background-color: #ef4444; 
  }
  .action-node.short .position-icon { 
    color: #dc2626; 
  }
  
  /* Position icon */
  .position-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    margin-left: 4px;
  }
  
  /* ReactFlow specific styles */
  .react-flow__attribution {
    display: none;
  }
  
  .react-flow__controls {
    box-shadow: var(--shadow);
    border-radius: 4px;
    overflow: hidden;
  }
  
  .react-flow__controls-button {
    border: none;
    color: var(--gray-700);
  }
  
  .react-flow__minimap {
    border-radius: 4px;
    overflow: hidden;
    border: 1px solid var(--gray-300);
  }